
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/vhz/plot_obs_vhz_ctrl_pmsm_2kw.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_vhz_plot_obs_vhz_ctrl_pmsm_2kw.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_vhz_plot_obs_vhz_ctrl_pmsm_2kw.py:


Observer-based V/Hz control: 2.2-kW PMSM
========================================

This example simulates observer-based V/Hz control of a 2.2-kW PMSM drive.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import the package.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default


    import numpy as np
    import motulator as mt








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 17-21

.. code-block:: default


    base = mt.BaseValues(
        U_nom=370, I_nom=4.3, f_nom=75, tau_nom=14, P_nom=2.2e3, p=3)








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: default


    motor = mt.SynchronousMotor()
    mech = mt.Mechanics()
    conv = mt.Inverter()
    mdl = mt.SynchronousMotorDrive(motor, mech, conv)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 31-35

.. code-block:: default


    pars = mt.SynchronousMotorVHzObsCtrlPars()
    ctrl = mt.SynchronousMotorVHzObsCtrl(pars)








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Set the speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 37-47

.. code-block:: default


    # Speed reference
    times = np.array([0, .125, .25, .375, .5, .625, .75, .875, 1])*8
    values = np.array([0, 0, 1, 1, 0, -1, -1, 0, 0])*base.w
    ctrl.w_m_ref = mt.Sequence(times, values)
    # External load torque
    times = np.array([0, .125, .125, .875, .875, 1])*8
    values = np.array([0, 0, 1, 1, 0, 0])*base.tau_nom
    mdl.mech.tau_L_t = mt.Sequence(times, values)








.. GENERATED FROM PYTHON SOURCE LINES 48-51

Create the simulation object and simulate it. You can also enable the PWM
model (which makes simulation slower). One-sampling-period computational
delay is modeled.

.. GENERATED FROM PYTHON SOURCE LINES 51-55

.. code-block:: default


    sim = mt.Simulation(mdl, ctrl, pwm=False, delay=1)
    sim.simulate(t_stop=8)








.. GENERATED FROM PYTHON SOURCE LINES 56-58

Plot results in per-unit values. By omitting the argument `base` you can plot
the results in SI units.

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: default


    mt.plot(sim, base=base)



.. image-sg:: /auto_examples/vhz/images/sphx_glr_plot_obs_vhz_ctrl_pmsm_2kw_001.png
   :alt: plot obs vhz ctrl pmsm 2kw
   :srcset: /auto_examples/vhz/images/sphx_glr_plot_obs_vhz_ctrl_pmsm_2kw_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  22.798 seconds)


.. _sphx_glr_download_auto_examples_vhz_plot_obs_vhz_ctrl_pmsm_2kw.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_obs_vhz_ctrl_pmsm_2kw.py <plot_obs_vhz_ctrl_pmsm_2kw.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_obs_vhz_ctrl_pmsm_2kw.ipynb <plot_obs_vhz_ctrl_pmsm_2kw.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
