
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/signal_inj/plot_signal_inj_pmsm_2kw.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py:


Vector control with signal injection: 2.2-kW PMSM
=================================================

This example simulates sensorless vector control of a 2.2-kW PMSM drive.
Square-wave signal injection is used with a simple phase-locked loop.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

Import the packages.

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    import motulator as mt








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: default


    base = mt.BaseValues(
        U_nom=370, I_nom=4.3, f_nom=75, tau_nom=14, P_nom=2.2e3, p=3)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: default


    motor = mt.SynchronousMotor(p=3, R_s=3.6, L_d=.036, L_q=.051, psi_f=.545)
    mech = mt.Mechanics(J=.015)
    conv = mt.Inverter()
    mdl = mt.SynchronousMotorDrive(motor, mech, conv)








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 33-47

.. code-block:: default


    pars = mt.SynchronousMotorSignalInjectionCtrlPars(
        T_s=250e-6,
        alpha_c=2*np.pi*100,
        alpha_s=2*np.pi*4,
        w_o=2*np.pi*40,
        U_inj=250,
        L_d=.036,
        L_q=.051,
        psi_f=.545,
        i_s_max=2*base.i,
        tau_M_max=2*base.tau_nom)
    ctrl = mt.SynchronousMotorSignalInjectionCtrl(pars)








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Set the speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 49-59

.. code-block:: default


    # Speed reference
    times = np.array([0, .25, .25, .375, .5, .625, .75, .75, 1])*4
    values = np.array([0, 0, 1, 1, 0, -1, -1, 0, 0])*base.w*.1
    ctrl.w_m_ref = mt.Sequence(times, values)
    # External load torque
    times = np.array([0, .125, .125, .875, .875, 1])*4
    values = np.array([0, 0, 1, 1, 0, 0])*base.tau_nom
    mdl.mech.tau_L_t = mt.Sequence(times, values)








.. GENERATED FROM PYTHON SOURCE LINES 60-61

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 61-65

.. code-block:: default


    sim = mt.Simulation(mdl, ctrl, pwm=False)
    sim.simulate(t_stop=4)








.. GENERATED FROM PYTHON SOURCE LINES 66-67

Plot results in per-unit values.

.. GENERATED FROM PYTHON SOURCE LINES 67-83

.. code-block:: default


    # Plot the "basic" figure
    mt.plot(sim, base=base)

    # Plot also the angles
    mdl = sim.mdl.data  # Continuous-time data
    ctrl = sim.ctrl.data  # Discrete-time data
    plt.figure()
    plt.plot(mdl.t, mdl.theta_m, label=r'$\vartheta_\mathrm{m}$')
    plt.step(ctrl.t, ctrl.theta_m, where='post',
             label=r'$\hat \vartheta_\mathrm{m}$')
    plt.legend()
    plt.xlim(0, 4)
    plt.xlabel('Time (s)')
    plt.ylabel('Electrical angle (rad)')
    plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_001.png
         :alt: plot signal inj pmsm 2kw
         :srcset: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_002.png
         :alt: plot signal inj pmsm 2kw
         :srcset: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.239 seconds)


.. _sphx_glr_download_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_signal_inj_pmsm_2kw.py <plot_signal_inj_pmsm_2kw.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_signal_inj_pmsm_2kw.ipynb <plot_signal_inj_pmsm_2kw.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
